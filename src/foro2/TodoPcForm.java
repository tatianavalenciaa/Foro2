package foro2;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

public class TodoPcForm extends javax.swing.JFrame {

    private List<Desktop> desktops = new ArrayList<>(); 
    private List<Laptop> laptops = new ArrayList<>(); 
    private List<Tablet> tablets = new ArrayList<>(); 
    
    public TodoPcForm() {
        initComponents();
        setLocationRelativeTo(null); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnDesktops = new javax.swing.JButton();
        btnLaptops = new javax.swing.JButton();
        btnTablets = new javax.swing.JButton();
        cmbOpciones = new javax.swing.JComboBox<>();
        lblMensaje = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TODOPC");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("BIENVENIDO A TODOPC");

        btnDesktops.setText("Desktops");
        btnDesktops.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesktopsActionPerformed(evt);
            }
        });

        btnLaptops.setText("Laptops");
        btnLaptops.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaptopsActionPerformed(evt);
            }
        });

        btnTablets.setText("Tablets");
        btnTablets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTabletsActionPerformed(evt);
            }
        });

        cmbOpciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Registrar", "Mostrar" }));

        lblMensaje.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMensaje.setForeground(new java.awt.Color(0, 0, 153));
        lblMensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDesktops, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLaptops, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTablets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbOpciones, javax.swing.GroupLayout.Alignment.TRAILING, 0, 117, Short.MAX_VALUE))
                .addGap(97, 97, 97))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(lblMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(cmbOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDesktops)
                .addGap(18, 18, 18)
                .addComponent(btnLaptops)
                .addGap(18, 18, 18)
                .addComponent(btnTablets)
                .addGap(18, 18, 18)
                .addComponent(lblMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String obtenerValor(String campo) {
        boolean valorIngresadoValido = false;
        String valorIngresado = null;
        
        while(!valorIngresadoValido) {
            valorIngresado = JOptionPane.showInputDialog(null, campo + ":");
            if (valorIngresado == null || valorIngresado.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Debe ingresar un valor");
            } else {
                valorIngresadoValido = true;
            }
        }
        return valorIngresado;
    }
    
    private void registrarDesktop() {
        Desktop desktop = new Desktop();
        desktop.setFabricante(obtenerValor("Fabricante"));
        desktop.setModelo(obtenerValor("Modelo"));
        desktop.setMicroprocesador(obtenerValor("Microprocesador"));
        desktop.setMemoria(obtenerValor("Memoria"));
        desktop.setTarjetaGrafica(obtenerValor("Tarjeta Grafica"));
        desktop.setTamanioTorre(obtenerValor("Tamanio Torre"));
        desktop.setCapacidadDiscoDuro(obtenerValor("Capacidad de Disco Duro"));
        desktops.add(desktop);
        JOptionPane.showMessageDialog(null, "Registro #" + desktops.size() + " agregado");
    }
    
    private void mostrarDesktops() {
        if (desktops.size() >= 1) {
            for (int i = 0; i < desktops.size(); i++) {
                String mensaje = 
                        "Desktop #" + (i+1) + ":\n\n"
                        + desktops.get(i).toString();
                JOptionPane.showMessageDialog(null, mensaje);
            }
        } else {
            lblMensaje.setText("No hay registros para mostrar");
        }
    }
    
    private void btnDesktopsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesktopsActionPerformed
        String opcionSeleccionada = (String) cmbOpciones.getSelectedItem();
                
        lblMensaje.setText("");
        switch (opcionSeleccionada) {
            case "Seleccione":
                lblMensaje.setText("Debe seleccionar una opcion");
                break;
            case "Registrar":
                registrarDesktop();
                break;
            case "Mostrar":
                mostrarDesktops();
                break;
            default:
                break;
        }
        
    }//GEN-LAST:event_btnDesktopsActionPerformed

    private void registrarLaptop() {
        Laptop laptop = new Laptop();
        laptop.setFabricante(obtenerValor("Fabricante"));
        laptop.setModelo(obtenerValor("Modelo"));
        laptop.setMicroprocesador(obtenerValor("Microprocesador"));
        laptop.setMemoria(obtenerValor("Memoria"));
        laptop.setTamanioPantalla(obtenerValor("Tamanio Pantalla"));
        laptop.setCapacidadDiscoDuro(obtenerValor("Capacidad de Disco Duro"));
        laptops.add(laptop);
        JOptionPane.showMessageDialog(null, "Registro #" + laptops.size() + " agregado");
    }
    
    private void mostrarLaptops() {
        if (laptops.size() >=1 ){
            for (int i = 0; i < laptops.size(); i++) {
                String mensaje = 
                        "Laptop #" + (i+1) + ":\n\n"
                        + laptops.get(i).toString();
                JOptionPane.showMessageDialog(null, mensaje);
            }
        } else {
            lblMensaje.setText("No hay registros para mostrar");
        }
    }
    
    private void btnLaptopsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaptopsActionPerformed
        String opcionSeleccionada = (String) cmbOpciones.getSelectedItem();
                
        lblMensaje.setText("");
        switch (opcionSeleccionada) {
            case "Seleccione":
                lblMensaje.setText("Debe seleccionar una opcion");
                break;
            case "Registrar":
                registrarLaptop();
                break;
            case "Mostrar":
                mostrarLaptops();
                break;
            default:
                break;
        }
    }//GEN-LAST:event_btnLaptopsActionPerformed

    private void registrarTablet() {
        Tablet tablet = new Tablet();
        tablet.setFabricante(obtenerValor("Fabricante"));
        tablet.setModelo(obtenerValor("Modelo"));
        tablet.setMicroprocesador(obtenerValor("Microprocesador"));
        tablet.setTamanioDiagonalPantalla(obtenerValor("Tamanio Diagonal Pantalla"));
        tablet.setCapacitivaResistiva(obtenerValor("Capacitiva/Resistiva"));
        tablet.setTamanioMemoriaNand(obtenerValor("Tamanio Memoria NAND"));
        tablet.setSistemaOperativo(obtenerValor("Sistema Operativo"));
        tablets.add(tablet);
        JOptionPane.showMessageDialog(null, "Registro #" + tablets.size() + " agregado");
    }
    
    private void mostrarTablets() {
        
        if(tablets.size() >= 1) {
            for (int i = 0; i < tablets.size(); i++) {
                String mensaje = 
                        "Tablet #" + (i+1) + ":\n\n"
                        + tablets.get(i).toString();
                JOptionPane.showMessageDialog(null, mensaje);
            }
        } else {
            lblMensaje.setText("No hay registros para mostrar");
        }
    }
    
    private void btnTabletsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTabletsActionPerformed
        String opcionSeleccionada = (String) cmbOpciones.getSelectedItem();
                
        lblMensaje.setText("");
        switch (opcionSeleccionada) {
            case "Seleccione":
                lblMensaje.setText("Debe seleccionar una opcion");
                break;
            case "Registrar":
                registrarTablet();
                break;
            case "Mostrar":
                mostrarTablets();
                break;
            default:
                break;
        }
    }//GEN-LAST:event_btnTabletsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TodoPcForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TodoPcForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TodoPcForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TodoPcForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TodoPcForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDesktops;
    private javax.swing.JButton btnLaptops;
    private javax.swing.JButton btnTablets;
    private javax.swing.JComboBox<String> cmbOpciones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblMensaje;
    // End of variables declaration//GEN-END:variables
}
